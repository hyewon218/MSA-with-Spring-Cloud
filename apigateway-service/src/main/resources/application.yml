server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          predicates:
            - Path=/first-service/**
          filters:
            #- AddRequestHeader=first-request, first-request-header2
            #- AddResponseHeader=first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**

        #- id: users-service
        #  uri: lb://USERS-SERVICE
        #  predicates:
        #    - Path=/users-service/**

        # 유저 로그인
        - id: users-service
          uri: lb://USERS-SERVICE
          predicates:
            - Path=/users-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/users-service/(?<segment>.*), /$\{segment}
        # 유저 회원가입
        - id: users-service
          uri: lb://USERS-SERVICE
          predicates:
            - Path=/users-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/users-service/(?<segment>.*), /$\{segment}
        # USER-SERVICE 의 Actuator 정보 추가
        - id: users-service
          uri: lb://USERS-SERVICE
          predicates:
            - Path=/users-service/actuator/**
            - Method=GET,POST # POST - refresh
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/users-service/(?<segment>.*), /$\{segment}
        # 유저 일반기능
        - id: users-service
          uri: lb://USERS-SERVICE
          predicates:
            - Path=/users-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/users-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter # jwt 인증 관련 필터

        - id: catalogs-service
          uri: lb://CATALOGS-SERVICE
          predicates:
            - Path=/catalogs-service/**

        - id: orders-service
          uri: lb://ORDERS-SERVICE
          predicates:
            - Path=/orders-service/**

          filters:
            #- AddRequestHeader=second-request, second-request-header2
            #- AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi, there.
                preLogger: true
                postLogger: true

token:
  secret: secret-key

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh